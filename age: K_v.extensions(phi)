[0;31mSignature:[0m      [0mK_v[0m[0;34m.[0m[0mextensions[0m[0;34m([0m[0mL[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;31mDocstring:[0m     
   Return the list of all extension of this valued field wrt to a
      finite field extension.

      INPUT:

      * "L" -- a finite field extension of the underlying field of
        this valued field

      L may be given in one of the following forms:

      * as an object of "StandardFiniteFieldExtension",

      * as field with subfield K, the underlying field of this valued
        field,

      * as an embedding \phi_K--> L.

      OUTPUT:

      a list of all extension of this valued field, with underlying
      extension field L.

      Thus, if this valued field is given by the pair (K, v) and L/K
      is a finite field extension, then the elements of the list are
      given by the pairs (L, w), where w runs over all extension of v
      to L.

      EXAMPLES:

         sage: from mclf import *
         sage: Q_2 = pAdicNumberField(QQ, 2)
         sage: R.<x> = QQ[]
         sage: L = NumberField(x^2 + x + 2, "a")
         sage: Q_2.extensions(L)
         [Number Field in a with defining polynomial x^2 + x + 2 with [ 2-adic
          valuation, v(x + 1) = 1 ]-adic valuation, as an extension of  2-adic
          completion of Rational Field,
          Number Field in a with defining polynomial x^2 + x + 2 with [ 2-adic
          valuation, v(x) = 1 ]-adic valuation, as an extension of  2-adic
          completion of Rational Field]
[0;31mInit docstring:[0m Initialize self.  See help(type(self)) for accurate signature.
[0;31mFile:[0m           ~/code/mclf/mclf/field_extensions/valued_field_extensions.py
[0;31mType:[0m           method
